{"version":3,"sources":["../../src/utils/impactClass.js"],"names":["Impact","constructor","input","region","periodType","timeToElapse","parseInt","reportedCases","population","totalHospitalBeds","currentlyInfected","infectionsByRequestedTime","Math","trunc","severeCasesByRequestedTime","hospitalBedsByRequestedTime","availableBeds","casesForICUByRequestedTime","casesForVentilatorsByRequestedTime","dollarsInFlight","avgDailyIncomePopulation","avgDailyIncomeInUSD"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,MAAN,CAAa;AACXC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,SAAKC,MAAL,GAAcD,KAAK,CAACC,MAApB;AACA,SAAKC,UAAL,GAAkBF,KAAK,CAACE,UAAxB;AACA,SAAKC,YAAL,GAAoBC,QAAQ,CAACJ,KAAK,CAACG,YAAP,EAAqB,EAArB,CAA5B;AACA,SAAKE,aAAL,GAAqBD,QAAQ,CAACJ,KAAK,CAACK,aAAP,EAAsB,EAAtB,CAA7B;AACA,SAAKC,UAAL,GAAkBF,QAAQ,CAACJ,KAAK,CAACK,aAAP,EAAsB,EAAtB,CAA1B;AACA,SAAKE,iBAAL,GAAyBP,KAAK,CAACK,aAA/B;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAKH,aAAL,GAAqB,EAA5B;AACD;;AAEDI,EAAAA,yBAAyB,GAAG;AAC1B,WAAO,KAAKD,iBAAL,KACL,KAAME,IAAI,CAACC,KAAL,CAAW,8BAAgB,KAAKT,UAArB,EAAiC,KAAKC,YAAtC,IAAsD,CAAjE,CADR;AAED;;AAEDS,EAAAA,0BAA0B,GAAG;AAC3B,WAAOF,IAAI,CAACC,KAAL,CAAW,KAAKF,yBAAL,KAAmC,IAA9C,CAAP;AACD;;AAEDI,EAAAA,2BAA2B,GAAG;AAC5B,UAAMC,aAAa,GAAG,KAAKP,iBAAL,GAAyB,IAA/C;AACA,WAAOG,IAAI,CAACC,KAAL,CAAWG,aAAa,GAAG,KAAKF,0BAAL,EAA3B,CAAP;AACD;;AAEDG,EAAAA,0BAA0B,GAAG;AAC3B,WAAQ,KAAKN,yBAAL,KAAmC,GAApC,GAA2C,CAAlD;AACD;;AAEDO,EAAAA,kCAAkC,GAAG;AACnC,WAAQ,KAAKP,yBAAL,KAAmC,GAApC,GAA2C,CAAlD;AACD;;AAEDQ,EAAAA,eAAe,GAAG;AAChB,WAAS,KAAKL,0BAAL,KAAoCR,QAAQ,CAAC,KAAKH,MAAL,CAAYiB,wBAAb,EAAuC,EAAvC,CAA7C,GACJd,QAAQ,CAAC,KAAKH,MAAL,CAAYkB,mBAAb,EAAkC,EAAlC,CADL,GAEH,8BAAgB,KAAKjB,UAArB,EAAiC,KAAKC,YAAtC,CAFJ;AAGD;;AAxCU;;eA2CEL,M","sourcesContent":["import normaliseToDays from '../helpers/normaliseToDays';\n\nclass Impact {\n  constructor(input) {\n    this.region = input.region;\n    this.periodType = input.periodType;\n    this.timeToElapse = parseInt(input.timeToElapse, 10);\n    this.reportedCases = parseInt(input.reportedCases, 10);\n    this.population = parseInt(input.reportedCases, 10);\n    this.totalHospitalBeds = input.reportedCases;\n  }\n\n  currentlyInfected() {\n    return this.reportedCases * 10;\n  }\n\n  infectionsByRequestedTime() {\n    return this.currentlyInfected()\n    * 2 ** (Math.trunc(normaliseToDays(this.periodType, this.timeToElapse) / 3));\n  }\n\n  severeCasesByRequestedTime() {\n    return Math.trunc(this.infectionsByRequestedTime() * 0.15);\n  }\n\n  hospitalBedsByRequestedTime() {\n    const availableBeds = this.totalHospitalBeds * 0.35;\n    return Math.trunc(availableBeds - this.severeCasesByRequestedTime());\n  }\n\n  casesForICUByRequestedTime() {\n    return (this.infectionsByRequestedTime() / 100) * 5;\n  }\n\n  casesForVentilatorsByRequestedTime() {\n    return (this.infectionsByRequestedTime() / 100) * 2;\n  }\n\n  dollarsInFlight() {\n    return ((this.severeCasesByRequestedTime() * parseInt(this.region.avgDailyIncomePopulation, 10))\n      * parseInt(this.region.avgDailyIncomeInUSD, 10))\n      / normaliseToDays(this.periodType, this.timeToElapse);\n  }\n}\n\nexport default Impact;\n"],"file":"impactClass.js"}
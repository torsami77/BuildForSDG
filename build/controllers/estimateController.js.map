{"version":3,"sources":["../../src/controllers/estimateController.js"],"names":["dirname","path","resolve","logPath","join","EstimateController","jsonResponseEstimation","req","res","estimation","body","data","impact","severeImpact","status","send","xmlResponseEstimation","json","options","compact","ignoreComment","spaces","xmlResult","convert","js2xml","logsResponseEstimation","fs","readFile","err"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,OAAO,GAAGC,cAAKC,OAAL,EAAhB;;AACA,MAAMC,OAAO,GAAGF,cAAKG,IAAL,CAAUJ,OAAV,EAAmB,MAAnB,EAA2B,YAA3B,CAAhB;;AAEA,MAAMK,kBAAN,CAAyB;AACvB,SAAOC,sBAAP,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwC;AACtC,UAAMC,UAAU,GAAG,wBAAUF,GAAG,CAACG,IAAd,CAAnB;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAAiCJ,UAAvC;AACA,WAAOD,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BJ,MAAAA,IAD0B;AACpBC,MAAAA,MADoB;AACZC,MAAAA;AADY,KAArB,CAAP;AAGD;;AAED,SAAOG,qBAAP,CAA6BT,GAA7B,EAAkCC,GAAlC,EAAuC;AACrC,UAAMC,UAAU,GAAG,wBAAUF,GAAG,CAACG,IAAd,CAAnB;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAAiCJ,UAAvC;AACA,UAAMQ,IAAI,GAAG;AACXN,MAAAA,IADW;AACLC,MAAAA,MADK;AACGC,MAAAA;AADH,KAAb;AAGA,UAAMK,OAAO,GAAG;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,aAAa,EAAE,IAAhC;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAAhB;;AACA,UAAMC,SAAS,GAAGC,eAAQC,MAAR,CAAeP,IAAf,EAAqBC,OAArB,CAAlB;;AACA,WAAOV,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBO,SAArB,CAAP;AACD;;AAED,SAAOG,sBAAP,CAA8BlB,GAA9B,EAAmCC,GAAnC,EAAwC;AACtCkB,gBAAGC,QAAH,CAAYxB,OAAZ,EAAqB,MAArB,EAA6B,CAACyB,GAAD,EAAMjB,IAAN,KAAe;AAC1C,UAAIiB,GAAJ,EAAS,MAAMA,GAAN;AACT,aAAOpB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB,CAAP;AACD,KAHD;AAID;;AAzBsB;;eA4BVN,kB","sourcesContent":["import convert from 'xml-js';\nimport fs from 'fs';\nimport path from 'path';\nimport estimator from '../estimator';\n\nconst dirname = path.resolve();\nconst logPath = path.join(dirname, 'logs', 'access.log');\n\nclass EstimateController {\n  static jsonResponseEstimation(req, res) {\n    const estimation = estimator(req.body);\n    const { data, impact, severeImpact } = estimation;\n    return res.status(200).send({\n      data, impact, severeImpact\n    });\n  }\n\n  static xmlResponseEstimation(req, res) {\n    const estimation = estimator(req.body);\n    const { data, impact, severeImpact } = estimation;\n    const json = {\n      data, impact, severeImpact\n    };\n    const options = { compact: true, ignoreComment: true, spaces: 4 };\n    const xmlResult = convert.js2xml(json, options);\n    return res.status(200).send(xmlResult);\n  }\n\n  static logsResponseEstimation(req, res) {\n    fs.readFile(logPath, 'utf8', (err, data) => {\n      if (err) throw err;\n      return res.status(200).send(data);\n    });\n  }\n}\n\nexport default EstimateController;\n"],"file":"estimateController.js"}